# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ds=config.settings.test --reuse-db"
python_files = ["tests.py", "test_*.py"]

# ==== Coverage ====
[tool.coverage.run]
include = ["wooster_django/**"]
omit = ["*/migrations/*", "*/tests/*"]
plugins = ["django_coverage_plugin"]

# ==== Ruff ====
[tool.ruff]
fix = true
line-length = 119
select = ["E", "F", "B"]
unfixable = ["B"]
target-version = "py311"

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint]
fixable = ["ALL"]


# ==== black ====
[tool.black]
line-length = 119
target-version = ['py311']


# ==== isort ====
[tool.isort]
profile = "black"
line_length = 119
known_first_party = ["wooster_django", "config"]
skip = ["venv/"]
skip_glob = ["**/migrations/*.py"]


# ==== mypy ====
[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main"]

[tool.mypy_django_plugin]
ignore_missing_model_attributes = true

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"


# ==== PyLint ====
[tool.pylint.MASTER]
load-plugins = ["pylint_django"]
django-settings-module = "config.settings.local"

[tool.pylint.FORMAT]
max-line-length = 119

[tool.pylint."MESSAGES CONTROL"]
disable = ["missing-docstring", "invalid-name"]

[tool.pylint.DESIGN]
max-parents = 13

[tool.pylint.TYPECHECK]
generated-members = [
    "REQUEST",
    "acl_users",
    "aq_parent",
    "[a-zA-Z]+_set{1,2}",
    "save",
    "delete",
]


# ==== djLint ====
[tool.djlint]
blank_line_after_tag = "load,extends"
close_void_tags = true
format_css = true
format_js = true
# TODO: remove T002 when fixed https://github.com/Riverside-Healthcare/djLint/issues/687
ignore = "H006,H030,H031,T002"
include = "H017,H035"
indent = 2
max_line_length = 119
profile = "django"

[tool.djlint.css]
indent_size = 2

[tool.djlint.js]
indent_size = 2

[tool.poetry]
# *'package-mode' was unexpected
# package-mode = false
name = "wooster-django"
version = "0.2.0"
description = ""
authors = ["Karl Wooster <karl@woostertech.com>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
django-anymail = {version = "^10.2", optional = true, extras = ["sendgrid"]}
gunicorn = {version = "^21.2.0", optional = true}
hiredis = {version = "^2.3.2", optional = true}
psycopg = {version = "^3.1.18", optional = true, extras = ["c"]}
sphinx = {version = "^7.2.6", optional = true}
sphinx-autobuild = {version = "^2024.2.4", optional = true}
python-slugify = "^8.0.4"
pillow = "^10.2.0"
argon2-cffi = "^23.1.0"
shortuuid = "^1.0.11"
whitenoise = "^6.6.0"
redis = "^5.0.2"
django = "^5.0.3"
django-colorfield = "^0.11.0"
django-environ = "^0.11.2"
django-model-utils = "^4.4.0"
django-allauth = "^0.61.1"
django-crispy-forms = "^2.1"
crispy-bootstrap5 = "^2024.2"
django-compressor = "^4.4"
django-redis = "^5.4.0"
django-phonenumber-field = {extras = ["phonenumberslite"], version = "^7.3.0"}

[tool.poetry.extras]
production = ["django-anymail", "gunicorn", "hiredis", "psycopg"]
docs = ["sphinx", "sphinx-autobuild"]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
werkzeug = {extras = ["watchdog"], version = "^3.0.1"}
ipdb = "^0.13.13"
psycopg = {extras = ["binary"], version = "^3.1.18"}
pytest = "^8.0.2"
pytest-sugar = "^1.0.0"
types-python-slugify = "^8.0.2.20240127"
ruff = "^0.2.2"
coverage = "^7.4.3"
djlint = "^1.34.1"
pylint-django = "^2.5.5"
pre-commit = "^3.6.2"
django-stubs = {extras = ["compatible-mypy"], version = "^4.2.7"}
commitizen = "^3.16.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
factory-boy = "^3.3.0"
django-debug-toolbar = "^4.3.0"
django-extensions = "^3.2.3"
django-coverage-plugin = "^3.1.0"
pytest-django = "^4.8.0"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
